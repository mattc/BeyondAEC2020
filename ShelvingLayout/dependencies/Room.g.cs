//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.1.4.0 (Newtonsoft.Json v12.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------
using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Elements.Geometry.Solids;
using Elements.Properties;
using Elements.Validators;
using System;
using System.Collections.Generic;
using System.Linq;
using Line = Elements.Geometry.Line;
using Polygon = Elements.Geometry.Polygon;

namespace Elements
{
    #pragma warning disable // Disable all warnings

    /// <summary>Represents a single room.</summary>
    [Newtonsoft.Json.JsonConverter(typeof(Elements.Serialization.JSON.JsonInheritanceConverter), "discriminator")]
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.4.0 (Newtonsoft.Json v12.0.0.0)")]
    [UserElement]
	public partial class Room : GeometricElement
    {
        [Newtonsoft.Json.JsonConstructor]
        public Room(Polygon @perimeter, Vector3 @direction, string @suite_Name, string @suite_Number, string @department, string @number, double @design_Area, double @design_Ratio, double @rotation, double @elevation, double @height, double @area, Transform @transform, Material @material, Representation @representation, bool @isElementDefinition, System.Guid @id, string @name)
            : base(transform, material, representation, isElementDefinition, id, name)
        {
            var validator = Validator.Instance.GetFirstValidatorForType<Room>();
            if(validator != null)
            {
                validator.Validate(new object[]{ @perimeter, @direction, @suite_Name, @suite_Number, @department, @number, @design_Area, @design_Ratio, @rotation, @elevation, @height, @area, @transform, @material, @representation, @isElementDefinition, @id, @name});
            }
        
            this.Perimeter = @perimeter;
            this.Direction = @direction;
            this.Suite_Name = @suite_Name;
            this.Suite_Number = @suite_Number;
            this.Department = @department;
            this.Number = @number;
            this.Design_Area = @design_Area;
            this.Design_Ratio = @design_Ratio;
            this.Rotation = @rotation;
            this.Elevation = @elevation;
            this.Height = @height;
            this.Area = @area;
        }
    
        /// <summary>The id of the polygon to extrude.</summary>
        [Newtonsoft.Json.JsonProperty("Perimeter", Required = Newtonsoft.Json.Required.AllowNull)]
        public Polygon Perimeter { get; set; }
    
        /// <summary>The direction in which to extrude.</summary>
        [Newtonsoft.Json.JsonProperty("Direction", Required = Newtonsoft.Json.Required.AllowNull)]
        public Vector3 Direction { get; set; }
    
        /// <summary>Name of the suite assigned to the room.</summary>
        [Newtonsoft.Json.JsonProperty("Suite Name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Suite_Name { get; set; }
    
        /// <summary>Number of the suite assigned to the room.</summary>
        [Newtonsoft.Json.JsonProperty("Suite Number", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Suite_Number { get; set; }
    
        /// <summary>Name of the department assigned to the room.</summary>
        [Newtonsoft.Json.JsonProperty("Department", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Department { get; set; }
    
        /// <summary>The number of the room.</summary>
        [Newtonsoft.Json.JsonProperty("Number", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Number { get; set; }
    
        /// <summary>Desired area of the room.</summary>
        [Newtonsoft.Json.JsonProperty("Design Area", Required = Newtonsoft.Json.Required.Always)]
        public double Design_Area { get; set; }
    
        /// <summary>Desired ratio of the X to Y dimensions of the room.</summary>
        [Newtonsoft.Json.JsonProperty("Design Ratio", Required = Newtonsoft.Json.Required.Always)]
        public double Design_Ratio { get; set; }
    
        /// <summary>The rotation in degrees of the room.</summary>
        [Newtonsoft.Json.JsonProperty("Rotation", Required = Newtonsoft.Json.Required.Always)]
        public double Rotation { get; set; }
    
        /// <summary>The elevation of the room.</summary>
        [Newtonsoft.Json.JsonProperty("Elevation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double Elevation { get; set; }
    
        /// <summary>The height of the room.</summary>
        [Newtonsoft.Json.JsonProperty("Height", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0D, double.MaxValue)]
        public double Height { get; set; }
    
        /// <summary>The area of the room.</summary>
        [Newtonsoft.Json.JsonProperty("Area", Required = Newtonsoft.Json.Required.Always)]
        public double Area { get; set; }
    
    
    }
}